//
//  main.m
//  IsAPointer
//
//  Created by 杨俊艺 on 2019/9/1.
//  Copyright © 2019 杨俊艺. All rights reserved.
//

#import <Foundation/Foundation.h>

int main(int argc, const char * argv[]) {
    @autoreleasepool {
        
        
        
        
        
    }
    return 0;
}

//NSObject虽然有很多方法,但是只有一个实例变量:isa指针
//任何一个对象的isa指针都会指向创建该对象的类,所有对象都知道自己是被哪个类创建的
//给对象发送消息时,对象会通过isa指针查询是否有该消息名的方法
//如果没有则继续查询父类,以此类推,直到达到继承链顶端NSObject
//
//这里提一下一个C语言宏定义container_of宏
//用于实现向上查找
//
//程序会执行首先找到的方法,如果是子类实例发送消息并找到,搜索到达父类之前就结束了
//但是使用super就等于告诉对象运行指定的方法,但是从对象的父类开始搜索与之匹配的实现
//
//处理%@时程序会先向相应的指针变量所指的对象发送description消息
//description会返回一个描述类实例的字符串,默认的NSObject会以字符串的形式返回对该对象在内存上的地址
//然而内存地址并不能有效进行描述,类可以覆盖description方法
//NSDate覆盖为返回实例保存的日期/时间
//
//深入学习:选择器的工作机制
//当某个对象收到消息时会向该对象的类进行查询,检查是否有与消息名称相匹配的方法,该查询过程会沿着继承层次结构向上,直到某个类回应"我有与消息名称相匹配的方法"
//方法的查询速度非常快,如果使用实际的方法名进行查询则会变得很慢
//为了提速,编译器会为每个其接触过的方法附上一个唯一的数字(选择器),程序运行时使用的是这个数字而不是方法名
//当一个方法需要一个选择器作为实参时,实际上需要的就是这一个数字,通过编译指令@selector可以得到与方法名相对应的选择器
